{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","isRightButtonDisabled","isLeftButtonDisabled","props","infinite","positionsArray","makeTransition","stepsCompleted","changePositions","arr","steps","newArr","step","images","length","i","itemWidth","changePositionsReverse","changeImgCyclic","setState","prevState","changeImgCyclicReverse","changeImg","direction","scrollLeft","maxStepsNumber","frameSize","setTimeout","scrollRight","prevProps","rebuildCarousel","this","className","style","width","height","transform","transition","animationDuration","map","image","index","src","alt","type","disabled","onClick","React","Component","App","changeRebuildProperty","defaultValue","min","max","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48fff4fa.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite:boolean,\n  rebuildCarousel: boolean,\n}\n\ninterface State {\n  isRightButtonDisabled: boolean,\n  isLeftButtonDisabled: boolean,\n  positionsArray: number[],\n  makeTransition: number,\n  stepsCompleted: number,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    isRightButtonDisabled: false,\n    isLeftButtonDisabled: !this.props.infinite,\n    positionsArray: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    makeTransition: 0,\n    stepsCompleted: 0,\n  };\n\n  componentDidUpdate(prevProps: { rebuildCarousel: boolean; }) {\n    if (prevProps.rebuildCarousel !== this.props.rebuildCarousel) {\n      this.setState({\n        isRightButtonDisabled: false,\n        isLeftButtonDisabled: !this.props.infinite,\n        makeTransition: 0,\n        stepsCompleted: 0,\n        positionsArray: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      });\n    }\n  }\n\n  changePositions = (arr: number[], steps: number) => {\n    const newArr = [...arr];\n    let step = steps;\n\n    if (steps < 0) {\n      step = this.props.images.length + steps;\n    }\n\n    for (let i = 0; i < arr.length; i += 1) {\n      newArr[i] -= this.props.itemWidth;\n    }\n\n    newArr[step] = this.props.itemWidth * (this.props.images.length - 1)\n    - this.props.itemWidth * step;\n\n    return newArr;\n  };\n\n  changePositionsReverse = (arr: number[], steps: number) => {\n    const newArr = [...arr];\n\n    for (let i = 0; i < arr.length; i += 1) {\n      newArr[i] += this.props.itemWidth;\n    }\n\n    if (steps > 0) {\n      newArr[steps - 1]\n      -= (this.props.itemWidth * (this.props.images.length));\n    } else {\n      newArr[this.props.images.length - 1 + steps]\n      = -(this.props.itemWidth * (this.props.images.length - 1)\n      + this.props.itemWidth * steps);\n    }\n\n    return newArr;\n  };\n\n  changeImgCyclic = () => {\n    this.setState((prevState) => {\n      return {\n        positionsArray: this\n          .changePositions(prevState.positionsArray, prevState.stepsCompleted),\n        stepsCompleted:\n          prevState.stepsCompleted === this.props.images.length - 1\n            ? 0\n            : prevState.stepsCompleted + 1,\n      };\n    });\n  };\n\n  changeImgCyclicReverse = () => {\n    this.setState((prevState) => {\n      return {\n        positionsArray: this\n          .changePositionsReverse(prevState.positionsArray,\n            prevState.stepsCompleted),\n        stepsCompleted:\n          prevState.stepsCompleted === -(this.props.images.length - 1)\n            ? 0\n            : prevState.stepsCompleted - 1,\n      };\n    });\n  };\n\n  changeImg = (direction: number) => {\n    this.setState((prevState) => {\n      return {\n        makeTransition: prevState.makeTransition\n          + this.props.itemWidth * direction,\n        isLeftButtonDisabled: false,\n        isRightButtonDisabled: false,\n        stepsCompleted: prevState.stepsCompleted - direction,\n      };\n    });\n  };\n\n  scrollLeft = () => {\n    const maxStepsNumber = this.props.images.length - this.props.frameSize;\n\n    setTimeout(() => {\n      if (this.props.infinite) {\n        this.changeImgCyclic();\n      } else if (this.state.stepsCompleted < maxStepsNumber) {\n        this.changeImg(-1);\n        if (this.state.stepsCompleted >= maxStepsNumber) {\n          this.setState({\n            isRightButtonDisabled: true,\n          });\n        }\n      }\n    }, 0);\n  };\n\n  scrollRight = () => {\n    setTimeout(() => {\n      if (this.props.infinite) {\n        this.changeImgCyclicReverse();\n      } else if (this.state.makeTransition < 0) {\n        this.changeImg(1);\n        if (this.state.stepsCompleted === 0) {\n          this.setState({\n            isLeftButtonDisabled: true,\n          });\n        }\n      }\n    }, 0);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: this.props.itemWidth * this.props.frameSize,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: this.props.itemWidth * this.props.images.length,\n            height: this.props.itemWidth,\n            transform: `translateX(${this.state.makeTransition}px)`,\n            transition: `${this.props.animationDuration}ms`,\n          }}\n        >\n          {this.props.images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={`${index + 1}`}\n              style={{\n                transform: `\n                translateX(${this.state.positionsArray[index]}px)`,\n                transition: `transform ${this.props.animationDuration}ms`,\n              }}\n            >\n              <img\n                className=\"Carousel__img\"\n                style={{\n                  width: this.props.itemWidth,\n                  height: this.props.itemWidth,\n                }}\n                src={image}\n                alt={`${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"ButtonContainer\">\n          <button\n            type=\"button\"\n            className=\"LeftButton\"\n            disabled={this.state.isLeftButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollRight();\n              }\n            }}\n          >\n            &lt;\n          </button>\n          <button\n            type=\"button\"\n            className=\"RightButton\"\n            disabled={this.state.isRightButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollLeft();\n              }\n            }}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","// import { values } from 'cypress/types/lodash';\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n  rebuildCarousel: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    rebuildCarousel: false,\n  };\n\n  changeRebuildProperty = () => {\n    return !this.state.rebuildCarousel;\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <div\n          className=\"CarouselContainer\"\n        >\n          <h1\n            className=\"CarouselTitle\"\n          >\n            Carousel with\n            {` ${images.length} `}\n            images\n          </h1>\n\n          <Carousel\n            images={images}\n            step={this.state.step}\n            frameSize={this.state.frameSize}\n            itemWidth={this.state.itemWidth}\n            animationDuration={this.state.animationDuration}\n            infinite={this.state.infinite}\n            rebuildCarousel={this.state.rebuildCarousel}\n          />\n        </div>\n\n        <h2>Carousel parameters</h2>\n\n        <label\n          className=\"Parameter\"\n        >\n          Step\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.step}\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            onChange={(event) => this.setState({\n              step: +event.target.value,\n              rebuildCarousel: this.changeRebuildProperty(),\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Frame size\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.frameSize}\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            onChange={(event) => this.setState({\n              frameSize: +event.target.value,\n              rebuildCarousel: this.changeRebuildProperty(),\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Item width\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.itemWidth}\n            min=\"50\"\n            max=\"200\"\n            step=\"10\"\n            onChange={(event) => this.setState({\n              itemWidth: +event.target.value,\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Animation duration\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.animationDuration}\n            min=\"0\"\n            max=\"3000\"\n            step=\"100\"\n            onChange={(event) => this.setState({\n              animationDuration: +event.target.value,\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Infinite\n          <select\n            className=\"ParamValue\"\n            onChange={(event) => {\n              this.setState({\n                infinite: event.target.value === 'true',\n                rebuildCarousel: this.changeRebuildProperty(),\n              });\n            }}\n            defaultValue=\"false\"\n          >\n            <option\n              value=\"true\"\n            >\n              Infinite\n            </option>\n            <option\n              value=\"false\"\n            >\n              Discret\n            </option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}