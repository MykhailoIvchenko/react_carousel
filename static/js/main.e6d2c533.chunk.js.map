{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentCount","isRightButtonDisabled","isLeftButtonDisabled","props","infinite","imagesArray","images","scrollLeft","setTimeout","temp","i","length","setState","animationDuration","step","frameSize","prevState","scrollRight","className","style","width","this","itemWidth","height","map","image","index","src","alt","type","disabled","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6d2c533.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite:boolean,\n}\n\ninterface State {\n  currentCount: number,\n  isRightButtonDisabled: boolean,\n  isLeftButtonDisabled: boolean,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    currentCount: 0,\n    isRightButtonDisabled: false,\n    isLeftButtonDisabled: !this.props.infinite,\n  };\n\n  imagesArray = [...this.props.images];\n\n  scrollLeft = () => {\n    if (this.props.infinite) {\n      setTimeout(() => {\n        const temp = this.imagesArray[0];\n\n        for (let i = 0; i < this.imagesArray.length - 1; i += 1) {\n          this.imagesArray[i] = this.imagesArray[i + 1];\n        }\n\n        this.imagesArray[this.imagesArray.length - 1] = temp;\n\n        this.setState({\n          currentCount: 0,\n        });\n      }, this.props.animationDuration);\n    } else {\n      setTimeout(() => {\n        if (this.state.currentCount < (this.imagesArray.length\n          - this.props.step - (this.props.frameSize - this.props.step))) {\n          const temp = this.imagesArray[0];\n\n          for (let i = 0; i < this.imagesArray.length - 1; i += 1) {\n            this.imagesArray[i] = this.imagesArray[i + 1];\n          }\n\n          this.imagesArray[this.imagesArray.length - 1] = temp;\n\n          this.setState((prevState) => {\n            return {\n              isLeftButtonDisabled: false,\n              currentCount: prevState.currentCount + 1,\n            };\n          });\n\n          if (this.state.currentCount >= (this.imagesArray.length\n            - this.props.step - (this.props.frameSize - this.props.step))) {\n            this.setState({\n              isRightButtonDisabled: true,\n            });\n          }\n        }\n      }, this.props.animationDuration);\n    }\n  };\n\n  scrollRight = () => {\n    if (this.props.infinite) {\n      setTimeout(() => {\n        const temp\n          = this.imagesArray[this.imagesArray.length - 1];\n\n        for (let i = this.imagesArray.length - 1; i > 0; i -= 1) {\n          this.imagesArray[i] = this.imagesArray[i - 1];\n        }\n\n        this.imagesArray[0] = temp;\n\n        this.setState({\n          currentCount: 0,\n        });\n      }, this.props.animationDuration);\n    } else {\n      setTimeout(() => {\n        if (this.state.currentCount > 0) {\n          const temp\n            = this.imagesArray[this.imagesArray.length - 1];\n\n          for (let i = this.imagesArray.length - 1; i > 0; i -= 1) {\n            this.imagesArray[i] = this.imagesArray[i - 1];\n          }\n\n          this.imagesArray[0] = temp;\n\n          this.setState((prevState) => {\n            return {\n              isRightButtonDisabled: false,\n              currentCount: prevState.currentCount - 1,\n            };\n          });\n\n          if (this.state.currentCount < 1) {\n            this.setState({\n              isLeftButtonDisabled: true,\n            });\n          }\n        }\n      }, this.props.animationDuration);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: this.props.itemWidth * this.props.frameSize,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: this.props.itemWidth * this.props.images.length,\n            height: this.props.itemWidth,\n          }}\n        >\n          {this.imagesArray.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={`${index + 1}`}\n            >\n              <img\n                className=\"Carousel__img\"\n                style={{\n                  width: this.props.itemWidth,\n                  height: this.props.itemWidth,\n                }}\n                src={image}\n                alt={`${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"ButtonContainer\">\n          <button\n            type=\"button\"\n            className=\"LeftButton\"\n            disabled={this.state.isLeftButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollRight();\n              }\n            }}\n          >\n            &lt;\n          </button>\n          <button\n            type=\"button\"\n            className=\"RightButton\"\n            disabled={this.state.isRightButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollLeft();\n              }\n            }}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}