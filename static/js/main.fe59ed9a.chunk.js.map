{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","isRightButtonDisabled","isLeftButtonDisabled","props","infinite","makeTransition","stepsCompleted","startReached","endReached","maxStepsNumber","images","length","frameSize","changeImg","direction","setState","prevState","itemWidth","changeImgCyclic","i","step","resetCycleAfterEndReached","moveLeftCyclic","changeImgCyclicReverse","resetCycleAfterStartReached","moveRightCyclic","moveLeft","moveRight","scrollLeft","setTimeout","scrollRight","prevProps","rebuildCarousel","this","className","style","width","height","transform","transition","animationDuration","map","image","index","src","alt","type","disabled","onClick","React","Component","App","changeRebuildProperty","defaultValue","min","max","onChange","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"uPAuBMA,E,4MACJC,MAAQ,CACNC,uBAAuB,EACvBC,sBAAuB,EAAKC,MAAMC,SAClCC,eAAgB,EAChBC,eAAgB,EAChBC,cAAc,EACdC,YAAY,EACZC,eAAgB,EAAKN,MAAMO,OAAOC,OAAS,EAAKR,MAAMS,W,EAiBxDC,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GACb,MAAO,CACLX,eAAgBW,EAAUX,eACtB,EAAKF,MAAMc,UAAYH,EAC3BZ,sBAAsB,EACtBD,uBAAuB,EACvBK,eAAgBU,EAAUV,eAAiBQ,O,EAKjDI,gBAAkB,WAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKhB,MAAMiB,KAAMD,GAAK,EACnC,EAAKnB,MAAMQ,aACd,EAAKK,WAAW,GAEZ,EAAKb,MAAMM,gBAAkB,EAAKN,MAAMS,gBAC1C,EAAKM,SAAS,CACZP,YAAY,M,EAOtBa,0BAA4B,WAC1B,EAAKN,SAAS,CACZV,eAAgB,EAChBC,eAAgB,EAChBC,cAAc,EACdC,YAAY,K,EAIhBc,eAAiB,WACmB,IAA9B,EAAKtB,MAAMM,gBACb,EAAKS,SAAS,CACZR,cAAc,IAId,EAAKP,MAAMQ,WACb,EAAKa,4BAKP,EAAKH,mB,EAGPK,uBAAyB,WACvB,IAAK,IAAIJ,EAAI,EAAGA,EAAI,EAAKhB,MAAMiB,KAAMD,GAAK,EACnC,EAAKnB,MAAMO,eACd,EAAKM,UAAU,GAEmB,IAA9B,EAAKb,MAAMM,gBACb,EAAKS,SAAS,CACZR,cAAc,M,EAOxBiB,4BAA8B,WAC5B,EAAKT,UAAS,SAACf,GAAD,MAAY,CACxBK,gBAAiBL,EAAMS,eAAiB,EAAKN,MAAMc,UACnDX,eAAgBN,EAAMS,eACtBF,cAAc,EACdC,YAAY,O,EAIhBiB,gBAAkB,WACZ,EAAKzB,MAAMM,iBAAmB,EAAKN,MAAMS,gBAC3C,EAAKM,SAAS,CACZP,YAAY,IAIZ,EAAKR,MAAMO,aACb,EAAKiB,8BAKP,EAAKD,0B,EAGPG,SAAW,WACT,IAAK,IAAIP,EAAI,EAAGA,EAAI,EAAKhB,MAAMiB,KAAMD,GAAK,EACpC,EAAKnB,MAAMM,eAAiB,EAAKN,MAAMS,iBACzC,EAAKI,WAAW,GACZ,EAAKb,MAAMM,gBAAkB,EAAKN,MAAMS,gBAC1C,EAAKM,SAAS,CACZd,uBAAuB,M,EAOjC0B,UAAY,WACV,IAAK,IAAIR,EAAI,EAAGA,EAAI,EAAKhB,MAAMiB,KAAMD,GAAK,EACpC,EAAKnB,MAAMK,eAAiB,IAC9B,EAAKQ,UAAU,GACmB,IAA9B,EAAKb,MAAMM,gBACb,EAAKS,SAAS,CACZb,sBAAsB,M,EAOhC0B,WAAa,WACXC,YAAW,WACL,EAAK1B,MAAMC,SACb,EAAKkB,iBAEL,EAAKI,aAEN,I,EAGLI,YAAc,WACZD,YAAW,WACL,EAAK1B,MAAMC,SACb,EAAKqB,kBAEL,EAAKE,cAEN,I,wDAnJL,SAAmBI,GACbA,EAAUC,kBAAoBC,KAAK9B,MAAM6B,iBAC3CC,KAAKlB,SAAS,CACZd,uBAAuB,EACvBC,sBAAuB+B,KAAK9B,MAAMC,SAClCC,eAAgB,EAChBC,eAAgB,EAChBC,cAAc,EACdC,YAAY,EACZC,eAAgBwB,KAAK9B,MAAMO,OAAOC,OAASsB,KAAK9B,MAAMS,c,oBA6I5D,WAAU,IAAD,OACP,OACE,sBACEsB,UAAU,WACVC,MAAO,CACLC,MAAOH,KAAK9B,MAAMc,UAAYgB,KAAK9B,MAAMS,WAH7C,UAME,oBACEsB,UAAU,iBACVC,MAAO,CACLC,MAAOH,KAAK9B,MAAMc,UAAYgB,KAAK9B,MAAMO,OAAOC,OAChD0B,OAAQJ,KAAK9B,MAAMc,UACnBqB,UAAU,cAAD,OAAgBL,KAAKjC,MAAMK,eAA3B,OACTkC,WAAW,GAAD,OAAKN,KAAK9B,MAAMqC,kBAAhB,OANd,SASGP,KAAK9B,MAAMO,OAAO+B,KAAI,SAACC,EAAOC,GAAR,OACrB,oBACET,UAAU,iBADZ,SAIE,qBACEA,UAAU,gBACVC,MAAO,CACLC,MAAO,EAAKjC,MAAMc,UAClBoB,OAAQ,EAAKlC,MAAMc,WAErB2B,IAAKF,EACLG,IAAG,UAAKF,EAAQ,MAXpB,UAEUA,EAAQ,SAetB,sBAAKT,UAAU,kBAAf,UACE,wBACEY,KAAK,SACLZ,UAAU,aACVa,SAAUd,KAAKjC,MAAME,qBACrB8C,QAAS,WACP,EAAKlB,eALT,eAUA,wBACEgB,KAAK,SACLZ,UAAU,cACVa,SAAUd,KAAKjC,MAAMC,sBACrB+C,QAAS,WACP,EAAKpB,cALT,yB,GA/MaqB,IAAMC,WA+NdnD,ICvOToD,E,4MACJnD,MAAQ,CACNU,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFU,KAAM,EACNR,UAAW,EACXK,UAAW,IACXuB,kBAAmB,IACnBpC,UAAU,EACV4B,iBAAiB,G,EAGnBoB,sBAAwB,WACtB,OAAQ,EAAKpD,MAAMgC,iB,4CAGrB,WAAU,IAAD,OACCtB,EAAWuB,KAAKjC,MAAhBU,OAER,OACE,sBAAKwB,UAAU,MAAf,UAEE,sBACEA,UAAU,oBADZ,UAGE,qBACEA,UAAU,gBADZ,qCAIOxB,EAAOC,OAJd,iBAQA,cAAC,EAAD,CACED,OAAQA,EACRU,KAAMa,KAAKjC,MAAMoB,KACjBR,UAAWqB,KAAKjC,MAAMY,UACtBK,UAAWgB,KAAKjC,MAAMiB,UACtBuB,kBAAmBP,KAAKjC,MAAMwC,kBAC9BpC,SAAU6B,KAAKjC,MAAMI,SACrB4B,gBAAiBC,KAAKjC,MAAMgC,qBAIhC,qDAEA,wBACEE,UAAU,YADZ,iBAIE,uBACEA,UAAU,aACVY,KAAK,SACLO,aAAcpB,KAAKjC,MAAMoB,KACzBkC,IAAI,IACJC,IAAI,KACJnC,KAAK,IACLoC,SAAU,SAACC,GAAD,OAAW,EAAK1C,SAAS,CACjCK,MAAOqC,EAAMC,OAAOC,MACpB3B,gBAAiB,EAAKoB,gCAK5B,wBACElB,UAAU,YADZ,uBAIE,uBACEA,UAAU,aACVY,KAAK,SACLO,aAAcpB,KAAKjC,MAAMY,UACzB0C,IAAI,IACJC,IAAI,KACJnC,KAAK,IACLoC,SAAU,SAACC,GAAD,OAAW,EAAK1C,SAAS,CACjCH,WAAY6C,EAAMC,OAAOC,MACzB3B,gBAAiB,EAAKoB,gCAK5B,wBACElB,UAAU,YADZ,uBAIE,uBACEA,UAAU,aACVY,KAAK,SACLO,aAAcpB,KAAKjC,MAAMiB,UACzBqC,IAAI,KACJC,IAAI,MACJnC,KAAK,KACLoC,SAAU,SAACC,GAAD,OAAW,EAAK1C,SAAS,CACjCE,WAAYwC,EAAMC,OAAOC,cAK/B,wBACEzB,UAAU,YADZ,+BAIE,uBACEA,UAAU,aACVY,KAAK,SACLO,aAAcpB,KAAKjC,MAAMwC,kBACzBc,IAAI,IACJC,IAAI,OACJnC,KAAK,MACLoC,SAAU,SAACC,GAAD,OAAW,EAAK1C,SAAS,CACjCyB,mBAAoBiB,EAAMC,OAAOC,cAKvC,wBACEzB,UAAU,YADZ,qBAIE,yBACEA,UAAU,aACVsB,SAAU,SAACC,GACT,EAAK1C,SAAS,CACZX,SAAiC,SAAvBqD,EAAMC,OAAOC,MACvB3B,gBAAiB,EAAKoB,2BAG1BC,aAAa,QARf,UAUE,wBACEM,MAAM,OADR,sBAKA,wBACEA,MAAM,QADR,mC,GAjJMV,IAAMC,WA6JTC,ICzKfS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe59ed9a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite:boolean,\n  rebuildCarousel: boolean,\n}\n\ninterface State {\n  isRightButtonDisabled: boolean,\n  isLeftButtonDisabled: boolean,\n  makeTransition: number,\n  stepsCompleted: number,\n  startReached: boolean,\n  endReached: boolean,\n  maxStepsNumber: number,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    isRightButtonDisabled: false,\n    isLeftButtonDisabled: !this.props.infinite,\n    makeTransition: 0,\n    stepsCompleted: 0,\n    startReached: true,\n    endReached: false,\n    maxStepsNumber: this.props.images.length - this.props.frameSize,\n  };\n\n  componentDidUpdate(prevProps: { rebuildCarousel: boolean; }) {\n    if (prevProps.rebuildCarousel !== this.props.rebuildCarousel) {\n      this.setState({\n        isRightButtonDisabled: false,\n        isLeftButtonDisabled: !this.props.infinite,\n        makeTransition: 0,\n        stepsCompleted: 0,\n        startReached: true,\n        endReached: false,\n        maxStepsNumber: this.props.images.length - this.props.frameSize,\n      });\n    }\n  }\n\n  changeImg = (direction: number) => {\n    this.setState((prevState) => {\n      return {\n        makeTransition: prevState.makeTransition\n          + this.props.itemWidth * direction,\n        isLeftButtonDisabled: false,\n        isRightButtonDisabled: false,\n        stepsCompleted: prevState.stepsCompleted - direction,\n      };\n    });\n  };\n\n  changeImgCyclic = () => {\n    for (let i = 0; i < this.props.step; i += 1) {\n      if (!this.state.endReached) {\n        this.changeImg(-1);\n\n        if (this.state.stepsCompleted >= this.state.maxStepsNumber) {\n          this.setState({\n            endReached: true,\n          });\n        }\n      }\n    }\n  };\n\n  resetCycleAfterEndReached = () => {\n    this.setState({\n      makeTransition: 0,\n      stepsCompleted: 0,\n      startReached: true,\n      endReached: false,\n    });\n  };\n\n  moveLeftCyclic = () => {\n    if (this.state.stepsCompleted !== 0) {\n      this.setState({\n        startReached: false,\n      });\n    }\n\n    if (this.state.endReached) {\n      this.resetCycleAfterEndReached();\n\n      return;\n    }\n\n    this.changeImgCyclic();\n  };\n\n  changeImgCyclicReverse = () => {\n    for (let i = 0; i < this.props.step; i += 1) {\n      if (!this.state.startReached) {\n        this.changeImg(1);\n\n        if (this.state.stepsCompleted === 0) {\n          this.setState({\n            startReached: true,\n          });\n        }\n      }\n    }\n  };\n\n  resetCycleAfterStartReached = () => {\n    this.setState((state) => ({\n      makeTransition: -state.maxStepsNumber * this.props.itemWidth,\n      stepsCompleted: state.maxStepsNumber,\n      startReached: false,\n      endReached: true,\n    }));\n  };\n\n  moveRightCyclic = () => {\n    if (this.state.stepsCompleted !== this.state.maxStepsNumber) {\n      this.setState({\n        endReached: false,\n      });\n    }\n\n    if (this.state.startReached) {\n      this.resetCycleAfterStartReached();\n\n      return;\n    }\n\n    this.changeImgCyclicReverse();\n  };\n\n  moveLeft = () => {\n    for (let i = 0; i < this.props.step; i += 1) {\n      if (this.state.stepsCompleted < this.state.maxStepsNumber) {\n        this.changeImg(-1);\n        if (this.state.stepsCompleted >= this.state.maxStepsNumber) {\n          this.setState({\n            isRightButtonDisabled: true,\n          });\n        }\n      }\n    }\n  };\n\n  moveRight = () => {\n    for (let i = 0; i < this.props.step; i += 1) {\n      if (this.state.makeTransition < 0) {\n        this.changeImg(1);\n        if (this.state.stepsCompleted === 0) {\n          this.setState({\n            isLeftButtonDisabled: true,\n          });\n        }\n      }\n    }\n  };\n\n  scrollLeft = () => {\n    setTimeout(() => {\n      if (this.props.infinite) {\n        this.moveLeftCyclic();\n      } else {\n        this.moveLeft();\n      }\n    }, 0);\n  };\n\n  scrollRight = () => {\n    setTimeout(() => {\n      if (this.props.infinite) {\n        this.moveRightCyclic();\n      } else {\n        this.moveRight();\n      }\n    }, 0);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: this.props.itemWidth * this.props.frameSize,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: this.props.itemWidth * this.props.images.length,\n            height: this.props.itemWidth,\n            transform: `translateX(${this.state.makeTransition}px)`,\n            transition: `${this.props.animationDuration}ms`,\n          }}\n        >\n          {this.props.images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={`${index + 1}`}\n            >\n              <img\n                className=\"Carousel__img\"\n                style={{\n                  width: this.props.itemWidth,\n                  height: this.props.itemWidth,\n                }}\n                src={image}\n                alt={`${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"ButtonContainer\">\n          <button\n            type=\"button\"\n            className=\"LeftButton\"\n            disabled={this.state.isLeftButtonDisabled}\n            onClick={() => {\n              this.scrollRight();\n            }}\n          >\n            &lt;\n          </button>\n          <button\n            type=\"button\"\n            className=\"RightButton\"\n            disabled={this.state.isRightButtonDisabled}\n            onClick={() => {\n              this.scrollLeft();\n            }}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","// import { values } from 'cypress/types/lodash';\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n  rebuildCarousel: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    rebuildCarousel: false,\n  };\n\n  changeRebuildProperty = () => {\n    return !this.state.rebuildCarousel;\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <div\n          className=\"CarouselContainer\"\n        >\n          <h1\n            className=\"CarouselTitle\"\n          >\n            Carousel with\n            {` ${images.length} `}\n            images\n          </h1>\n\n          <Carousel\n            images={images}\n            step={this.state.step}\n            frameSize={this.state.frameSize}\n            itemWidth={this.state.itemWidth}\n            animationDuration={this.state.animationDuration}\n            infinite={this.state.infinite}\n            rebuildCarousel={this.state.rebuildCarousel}\n          />\n        </div>\n\n        <h2>Carousel parameters</h2>\n\n        <label\n          className=\"Parameter\"\n        >\n          Step\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.step}\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            onChange={(event) => this.setState({\n              step: +event.target.value,\n              rebuildCarousel: this.changeRebuildProperty(),\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Frame size\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.frameSize}\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            onChange={(event) => this.setState({\n              frameSize: +event.target.value,\n              rebuildCarousel: this.changeRebuildProperty(),\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Item width\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.itemWidth}\n            min=\"50\"\n            max=\"200\"\n            step=\"10\"\n            onChange={(event) => this.setState({\n              itemWidth: +event.target.value,\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Animation duration\n          <input\n            className=\"ParamValue\"\n            type=\"number\"\n            defaultValue={this.state.animationDuration}\n            min=\"0\"\n            max=\"3000\"\n            step=\"100\"\n            onChange={(event) => this.setState({\n              animationDuration: +event.target.value,\n            })}\n          />\n        </label>\n\n        <label\n          className=\"Parameter\"\n        >\n          Infinite\n          <select\n            className=\"ParamValue\"\n            onChange={(event) => {\n              this.setState({\n                infinite: event.target.value === 'true',\n                rebuildCarousel: this.changeRebuildProperty(),\n              });\n            }}\n            defaultValue=\"false\"\n          >\n            <option\n              value=\"true\"\n            >\n              Infinite\n            </option>\n            <option\n              value=\"false\"\n            >\n              Discrete\n            </option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}