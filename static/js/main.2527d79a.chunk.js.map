{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentCount","isRightButtonDisabled","isLeftButtonDisabled","props","infinite","imagesArray","images","changeImgArrayCyclic","direction","setState","prevState","slice","changeImgArray","scrollLeft","setTimeout","animationDuration","length","step","frameSize","scrollRight","className","style","width","this","itemWidth","height","map","image","index","src","alt","type","disabled","onClick","i","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2527d79a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite:boolean,\n}\n\ninterface State {\n  currentCount: number,\n  isRightButtonDisabled: boolean,\n  isLeftButtonDisabled: boolean,\n  imagesArray: string[],\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    currentCount: 0,\n    isRightButtonDisabled: false,\n    isLeftButtonDisabled: !this.props.infinite,\n    imagesArray: [...this.props.images],\n  };\n\n  changeImgArrayCyclic = (direction: number) => {\n    this.setState((prevState) => {\n      return {\n        imagesArray: [...prevState.imagesArray.slice(direction),\n          ...prevState.imagesArray.slice(0, direction)],\n      };\n    });\n  };\n\n  changeImgArray = (direction: number) => {\n    this.setState((prevState) => {\n      return {\n        imagesArray: [...prevState.imagesArray.slice(direction),\n          ...prevState.imagesArray.slice(0, direction)],\n        isLeftButtonDisabled: false,\n        isRightButtonDisabled: false,\n        currentCount: prevState.currentCount + direction,\n      };\n    });\n  };\n\n  scrollLeft = () => {\n    if (this.props.infinite) {\n      setTimeout(() => {\n        this.changeImgArrayCyclic(1);\n      }, this.props.animationDuration);\n    } else {\n      setTimeout(() => {\n        if (this.state.currentCount < (this.state.imagesArray.length\n          - this.props.step - (this.props.frameSize - this.props.step))) {\n          this.changeImgArray(1);\n\n          if (this.state.currentCount >= (this.state.imagesArray.length\n            - this.props.step - (this.props.frameSize - this.props.step))) {\n            this.setState({\n              isRightButtonDisabled: true,\n            });\n          }\n        }\n      }, this.props.animationDuration);\n    }\n  };\n\n  scrollRight = () => {\n    if (this.props.infinite) {\n      setTimeout(() => {\n        this.changeImgArrayCyclic(-1);\n      }, this.props.animationDuration);\n    } else {\n      setTimeout(() => {\n        if (this.state.currentCount > 0) {\n          this.changeImgArray(-1);\n\n          if (this.state.currentCount < 1) {\n            this.setState({\n              isLeftButtonDisabled: true,\n            });\n          }\n        }\n      }, this.props.animationDuration);\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: this.props.itemWidth * this.props.frameSize,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: this.props.itemWidth * this.props.images.length,\n            height: this.props.itemWidth,\n          }}\n        >\n          {this.state.imagesArray.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={`${index + 1}`}\n            >\n              <img\n                className=\"Carousel__img\"\n                style={{\n                  width: this.props.itemWidth,\n                  height: this.props.itemWidth,\n                }}\n                src={image}\n                alt={`${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"ButtonContainer\">\n          <button\n            type=\"button\"\n            className=\"LeftButton\"\n            disabled={this.state.isLeftButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollRight();\n              }\n            }}\n          >\n            &lt;\n          </button>\n          <button\n            type=\"button\"\n            className=\"RightButton\"\n            disabled={this.state.isRightButtonDisabled}\n            onClick={() => {\n              for (let i = 0; i < this.props.step; i += 1) {\n                this.scrollLeft();\n              }\n            }}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}